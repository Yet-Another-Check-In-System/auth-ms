// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expireAt  DateTime

  firstName     String
  lastName      String
  email         String
  emailVerified Boolean @default(false)
  country       String
  company       String?

  password    String?
  appleId     String?
  googleId    String?
  microsoftId String?

  usersInGroups UsersInGroups[]
}

model Group {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  UsersInGroups    UsersInGroups[]
  groupPermissions GroupPermissions[]
}

model Permission {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  groupPermissions GroupPermissions[]
}

model GroupPermissions {
  group        Group      @relation(fields: [groupId], references: [id])
  groupId      String     @db.Uuid
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String     @db.Uuid

  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([groupId, permissionId])
}

model UsersInGroups {
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.Uuid
  group   Group  @relation(fields: [groupId], references: [id])
  groupId String @db.Uuid

  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([userId, groupId])
}

model CleanUp {
  id            String   @id @default(uuid()) @db.Uuid
  createdAt     DateTime @default(now())
  removedAmount Int
}
